//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <UIKit/UIKit.h>

#import "CSLPIButtonHandlerProtocol.h"
#import "NPTOUserPhotoFaceServerDelegateProtocol.h"
#import "NTKClockViewDelegate.h"
#import "NTKFaceCollectionObserver.h"
#import "NTKFaceLibraryViewControllerDelegate.h"
#import "NTKFaceViewControllerDelegate.h"
#import "ORBTapGestureRecognizerDelegate.h"
#import "UIGestureRecognizerDelegate.h"

@class CSLPITimer, NSSet, NSString, NSTimer, NTKAggdReporter, NTKFaceLibraryViewController, NTKFaceSnapshotClient, NTKFaceViewController, NTKPersistentFaceCollection, NTKTransientFaceCollection, ORBAnimator, ORBTapGestureRecognizer;

@interface NTKClockViewController : UIViewController <NTKClockViewDelegate, NTKFaceViewControllerDelegate, NTKFaceLibraryViewControllerDelegate, ORBTapGestureRecognizerDelegate, CSLPIButtonHandlerProtocol, UIGestureRecognizerDelegate, NPTOUserPhotoFaceServerDelegateProtocol, NTKFaceCollectionObserver>
{
    Class _statusBarViewControllerClass;
    NTKPersistentFaceCollection *_libraryFaceCollection;
    NTKPersistentFaceCollection *_addableFaceCollection;
    NTKTransientFaceCollection *_fallbackLibraryFaceCollection;
    NTKFaceSnapshotClient *_snapshotClient;
    NTKFaceViewController *_faceViewController;
    _Bool _faceViewControllerIsBorrowed;
    NTKFaceViewController *_borrowedFaceViewController;
    _Bool _pendingRecreateFaceContentAfterBorrowing;
    NTKFaceLibraryViewController *_libraryViewController;
    _Bool _libraryViewIsPresented;
    ORBTapGestureRecognizer *_orbRecognizer;
    ORBAnimator *_orbAnimator;
    _Bool _orbZoomActive;
    _Bool _haveLoadedView;
    _Bool _haveFinishedLoadingView;
    CSLPITimer *_complicationRefreshTimer;
    NTKAggdReporter *_aggdReporter;
    NSTimer *_libraryTimeoutTimer;
    _Bool _lockScreenBorrowed;
    NSSet *_pauseReasons;
}

@property(nonatomic, getter=isLockScreenBorrowed) _Bool lockScreenBorrowed; // @synthesize lockScreenBorrowed=_lockScreenBorrowed;
@property(copy, nonatomic) NSSet *pauseReasons; // @synthesize pauseReasons=_pauseReasons;
// - (void).cxx_destruct;
- (struct CGRect)launchRectForComplicationApplicationIdentifier:(id)arg1;
- (_Bool)createNewUserPhotoFaceFromPath:(id)arg1;
- (void)clockFaceCountCurrent:(unsigned int *)arg1 max:(unsigned int *)arg2;
- (id)userPhotoFaceDirectory;
- (void)PPTCleanupLastComplication;
- (void)PPTCreateComplication:(id)arg1 forSlot:(id)arg2 synchronously:(_Bool)arg3;
- (void)PPTPrepareComplicationTest;
- (id)PPTDescriptionForComplication:(id)arg1;
- (id)PPTUniqueComplicationsToSlotForCurrentFace;
- (void)PPTRestoreLibrary;
- (void)PPTUseBlankFaceLibrary;
- (int)PPTFaceIndexForPPTFaceName:(id)arg1;
- (int)PPTFaceIndexForFaceStyle:(int)arg1;
- (int)PPTFaceStyleForPPTFaceName:(id)arg1;
- (unsigned int)PPTCurrentFaceStyle;
- (void)PPTSwitchToFaceAtIndex:(unsigned int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTCreateFaceOfStyle:(int)arg1;
- (void)PPTScrubToDate:(id)arg1;
- (void)PPTEndScrubbingAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTStartScrubbingAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)PPTHideFaceSwitcherWithCompletion:(CDUnknownBlockType)arg1;
- (void)PPTShowFaceSwitcherWithCompletion:(CDUnknownBlockType)arg1;
- (void)_refreshComplicationData;
- (void)_handleBatteryStateChange;
- (_Bool)_wakeAnimationsEnabled;
- (void)cancelWristRaiseAnimation;
- (void)prepareWristRaiseAnimation;
- (void)performWristRaiseAnimation;
- (_Bool)handleButton:(unsigned int)arg1 eventType:(unsigned int)arg2;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)_maybeSetOrbEnabled:(_Bool)arg1;
- (void)_endOrbZoom:(_Bool)arg1;
- (void)_setOrbZoomProgress:(float)arg1;
- (void)_beginOrbZoom;
- (void)ORBTapGestureRecognizer:(id)arg1 setScaleFactor:(float)arg2;
- (void)ORBTapGestureRecognizerDidLatch:(id)arg1;
- (void)faceLibraryViewControllerDidCompleteSelection:(id)arg1;
- (void)faceLibraryViewControllerWillCompleteSelection:(id)arg1;
- (id)faceLibraryViewController:(id)arg1 newViewControllerForFace:(id)arg2 configuration:(CDUnknownBlockType)arg3;
- (void)faceViewControllerWillExitTimeTravel;
- (void)faceViewControllerWillEnterTimeTravel;
- (id)blurSourceImageForClockView:(id)arg1;
- (void)_notifyDuetOfComplicationActivation;
- (id)currentComplicationApplicationIdentifiers;
- (void)_ensureStatusBarForFaceViewController:(id)arg1;
- (void)_putLibraryViewControllerIntoClockViewController;
- (void)_putFaceViewControllerIntoClockViewController;
- (id)_borrowFaceViewController;
- (void)_removeLibraryController;
- (void)_endFaceLibraryControllerPresentation;
- (void)__removeChildViewController:(id)arg1;
- (void)__addChildViewController:(id)arg1;
- (void)_prepareToPresentLibraryViewController;
- (void)_showLibraryViewControllerAnimated:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_showLibraryViewControllerWithCompletion:(CDUnknownBlockType)arg1;
- (id)_newFaceControllerForFace:(id)arg1 withConfiguration:(CDUnknownBlockType)arg2;
- (id)siriContextFaceIdentifier;
- (id)currentFaceDescription;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)_teardownExistingFaceViewControllerIfNeeded;
- (void)_finishLoadingViewIfNecessary;
- (_Bool)_hasRealFaceCollections;
- (void)_createOrRecreateFaceContent;
- (void)loadView;
- (_Bool)handleCrownPressed;
- (void)handleOrdinaryScreenWake;
- (void)handleWristRaiseScreenWake;
- (void)disableSlowMode;
- (void)enableSlowMode;
- (void)_resumeUpdates;
- (void)_pauseUpdates;
- (id)lifeCycleTrackingFaceViewController;
- (void)restoreIconZoomController;
- (id)borrowIconZoomController;
- (void)updateSnapshotsSynchronously;
- (_Bool)canBecomeFirstResponder;
- (void)_cancelLibraryTimeoutTimer;
- (void)_libraryTimeoutTimerFired;
- (void)_startLibraryTimeoutTimer;
- (void)_prewarmFaceContentIfNeeded;
- (void)faceCollectionDidLoad:(id)arg1;
- (void)dealloc;
- (id)initWithStatusViewControllerClass:(Class)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

